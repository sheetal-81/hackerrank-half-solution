Sample Input 0

3 5
2 4
0 0
-1 -2
-1 3
Sample Output 0

243
16
java.lang.Exception: n and p should not be zero.
java.lang.Exception: n or p should not be negative.
java.lang.Exception: n or p should not be negative.
Explanation 0

In the first two cases, both  and  are postive. So, the power function returns the answer correctly.
In the third case, both  and  are zero. So, the exception, "n and p should not be zero.", is printed.
In the last two cases, at least one out of  and  is negative. So, the exception, "n or p should not be negative.", is printed for these two cases.

import java.io.*;
import java.util.*;
import java.util.Scanner;

public class Solution {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (sc.hasNext()) {
            int n = sc.nextInt();
            int p = sc.nextInt();
            try {
                if (n < 0 || p < 0) {
                    throw new Exception("java.lang.Exception: n or p should not be negative.");
                } else if (n == 0 && p == 0) {
                    throw new Exception("java.lang.Exception: n and p should not be zero.");
                } else {
                    double r = Math.pow(n, p);
                    System.out.println((int) r);
                }
            } catch (Exception e) {
                System.out.println(e.getMessage());
            }
        }
        sc.close();
    }
}
